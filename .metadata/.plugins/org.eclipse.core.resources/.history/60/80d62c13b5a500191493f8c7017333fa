package com.WhatsApp.Common;

import org.openqa.selenium.UnexpectedAlertBehaviour;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;



public class BaseTest{

	public BaseTest() {
		super();
		//PageFactory.initElements(driver, this);
	}
	
	@BeforeMethod
	public void SetUp(){
		//invoke();
		String browerName = prop.getProperty("browser");
		if(browerName.equalsIgnoreCase("chrome")){
			System.setProperty("webdriver.chrome.driver",System.getProperty("user.dir")+"/Servers/chromedriver.exe");
			ChromeOptions options = new ChromeOptions();
			options.addArguments("test-type");
			options.addArguments("start-maximized");
			options.addArguments("--js-flags=--expose-gc");
			options.addArguments("--enable-precise-memory-info");
			options.addArguments("--disable-popup-blocking");
			options.addArguments("--disable-default-apps");
			options.addArguments("test-type=browser");    
			options.addArguments("disable-infobars");
			options.setAcceptInsecureCerts(true);
			options.setUnhandledPromptBehaviour(UnexpectedAlertBehaviour.ACCEPT);
			driver = new ChromeDriver(options);
		}
	}
	
	@AfterMethod
	public void testDown(){
		driver.quit();
	}
	
	@Test
	public void test1() throws Exception{
		LoginPage login = new LoginPage();
		
		Boolean t = login.isChecked();
		System.out.println(t);
		
	//	DashboardPage dashboard = new DashboardPage();
		//dashboard.clickOnGroup("Fucker Vivek");
	}
}
